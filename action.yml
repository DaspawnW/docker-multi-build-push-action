name: 'Deploy to multiple registries'
description: 'Action to deploy to ghcr and/or public ecr'
inputs:
  docker-tag:
    description: 'Tag to build and push'
    required: true

  ecr-enabled:
    description: 'Enable or disable publishing to public ecr'
    required: true
  ecr-role-to-assume:
    description: 'Role to push to public ECR'
    required: false
  ecr-repository-url:
    description: 'Repository to push to'
    required: false

  ghcr-enabled:
    description: 'Enable or disable publishing to ghcr'
    required: true
  ghcr-token:
    description: 'Token to authenticate to ghcr'
    required: false

outputs: { }
runs:
  using: "composite"
  steps:
    - name: "[ECR] - Configure AWS credentials"
      uses: aws-actions/configure-aws-credentials@v2
      if: inputs.ecr-enabled == 'true'
      with:
        role-to-assume: ${{ inputs.ecr-role-to-assume }}
        aws-region: us-east-1
    - name: "[ECR] - Login to AWS"
      if: inputs.ecr-enabled == 'true'
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public
    - name: "[ECR] - Build image name"
      uses: actions/github-script@v6
      if: inputs.ecr-enabled == 'true'
      id: ecr_repo_slug
      with:
        result-encoding: string
        script: return '${{ inputs.ecr-repository-url }}:${{ inputs.docker-tag }}'.toLowerCase()

    - name: "[GHCR] - Login"
      uses: docker/login-action@v2
      if: inputs.ghcr-enabled == 'true'
      with:
        registry: ghcr.io
        username: "${{ github.actor }}"
        password: "${{ inputs.ghcr-token }}"
    - name: "[GHCR] - Build Image name"
      uses: actions/github-script@v6
      if: inputs.ghcr-enabled == 'true'
      id: ghcr_repo_slug
      with:
        result-encoding: string
        script: return 'ghcr.io/${{ github.repository }}:${{ inputs.docker-tag }}'.toLowerCase()

    - name: "Collect tags"
      uses: actions/github-script@v6
      id: repo_slug
      env:
        ECR_REPO_TAG: "${{ inputs.ecr-enabled == 'true' && steps.ecr_repo_slug.outputs.result || '' }}"
        GHCR_REPO_TAG: "${{ inputs.ghcr-enabled == 'true' && steps.ghcr_repo_slug.outputs.result || '' }}"
      with:
        result-encoding: json
        script: |
          const { ECR_REPO_TAG, GHCR_REPO_TAG } = process.env
          
          let tags = []
          if (ECR_REPO_TAG.trim() != "") {
            tags.push(ECR_REPO_TAG)
          }
          
          if (GHCR_REPO_TAG.trim() != "") {
            tags.push(GHCR_REPO_TAG)
          }
          
          return tags.join(',')

    - name: "Build and push"
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: "${{ steps.repo_slug.outputs.result }}"